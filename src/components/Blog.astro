---
import blogs from "../content/blogs.json";

const colorConfig = {
  blue: { border: "border-t-blue-500", text: "text-blue-600" },
  green: { border: "border-t-green-500", text: "text-green-600" },
  red: { border: "border-t-red-500", text: "text-red-600" },
  yellow: { border: "border-t-amber-500", text: "text-amber-600" },
};

const colorCycle = Object.keys(colorConfig);

const getColorForIndex = (index: number) => {
  return colorCycle[index % colorCycle.length];
};

const truncateText = (text: string, wordLimit: number) => {
  const words = text.split(" ");
  if (words.length <= wordLimit) {
    return text;
  }
  return words.slice(0, wordLimit).join(" ") + "...";
};

const initialRightCardBlog = blogs.length > 4 ? blogs[4] : blogs[0];
const initialColor = initialRightCardBlog ? getColorForIndex(blogs.indexOf(initialRightCardBlog)) : 'blue';
---

<head>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400;700&family=Inter:wght@400;500&display=swap" rel="stylesheet">

  <!-- Preload all blog images -->
  {blogs.map(blog => (
    <link rel="preload" as="image" href={blog.img} />
  ))}

  <style>
    body {
      font-family: 'Inter', sans-serif;
    }
    .font-jetbrains-mono {
      font-family: 'JetBrains Mono', monospace;
    }
    /* Fade transition for right-card images */
    #right-card .image-container {
      position: relative;
      width: 100%;
      height: 16rem; /* h-64 */
      overflow: hidden;
    }
    #right-card .image-container img {
      position: absolute;
      top: 0; left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
      opacity: 0;
      transition: opacity 0.4s ease-in-out;
    }
    #right-card .image-container img.active {
      opacity: 1;
      z-index: 2;
    }
  </style>
</head>

<section class="bg-gray-50 dark:bg-gray-900 py-12">
  <div class="container mx-auto px-4">
    <header class="text-center mb-10">
      <h1 class="font-fira-code text-4xl md:text-5xl font-bold text-gray-800 dark:text-gray-100">
        <span class="text-blue-600">&lt;</span> BLOGS <span class="text-green-600">/</span> <span class="text-red-600">&gt;</span>
      </h1>
      <p class="font-jetbrains-mono text-gray-500 dark:text-gray-400 mt-3 text-sm">// Our latest thoughts and discoveries</p>
    </header>

    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 lg:gap-25">
      <div id="left-cards-container" class="space-y-8">
        {
          blogs.slice(0, 4).map((blog, index) => {
            const colorName = getColorForIndex(index);
            const { border, text } = colorConfig[colorName];

            return (
              <div
                class={`group bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 border-t-4 ${border} rounded-lg transition-all duration-300 hover:shadow-xl hover:-translate-y-2 blog-card-left overflow-hidden`}
                data-title={blog.title}
                data-author={blog.author}
                data-date={blog.date}
                data-excerpt={blog.excerpt}
                data-link={blog.link}
                data-color={colorName}
                data-img={blog.img}
              >
                <a href={blog.link} target="_blank" rel="noopener noreferrer">
                  <img 
                    src={blog.img} 
                    alt={blog.title} 
                    class="w-full h-48 object-cover lg:hidden" 
                    loading="lazy"
                  />
                  <div class="p-5">
                    <h2 class="font-jetbrains-mono text-2xl font-bold text-gray-900 dark:text-gray-100">{blog.title}</h2>
                    <p class="font-jetbrains-mono text-xs text-gray-400 dark:text-gray-500 mt-2">// by {blog.author} • {blog.date}</p>
                    <p class="text-gray-700 dark:text-gray-300 leading-relaxed mt-4 lg:hidden">{truncateText(blog.excerpt, 15)}</p>
                    
                    {/* ✅ Wrapped span in a div with text-right */}
                    <div class="text-right mt-4">
                      <span class={`font-jetbrains-mono ${text} inline-block`}>
                        read_more &rarr;
                      </span>
                    </div>
                  </div>
                </a>
              </div>
            );
          })
        }
      </div>
      
      {/* Right Column (Desktop) */}
      <div class="hidden lg:flex lg:items-center">
        {
          initialRightCardBlog && (
            <div id="right-card" class={`group bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 border-t-4 ${colorConfig[initialColor].border} rounded-lg transition-all duration-300 hover:shadow-2xl hover:-translate-y-2 overflow-hidden`}>
              <a id="right-card-link" href={initialRightCardBlog.link} target="_blank" rel="noopener noreferrer">
                <div class="image-container">
                  {blogs.map((blog) => (
                    <img 
                      src={blog.img} 
                      alt={blog.title} 
                      class={blog === initialRightCardBlog ? "active" : ""} 
                      data-title={blog.title}
                      loading="eager"
                    />
                  ))}
                </div>
                <div class="p-6">
                  <h2 id="right-card-title" class="font-jetbrains-mono text-3xl font-bold text-gray-900 dark:text-gray-100">{initialRightCardBlog.title}</h2>
                  <p id="right-card-meta" class="font-jetbrains-mono text-sm text-gray-500 dark:text-gray-400 mt-3 mb-6">// by {initialRightCardBlog.author} • {initialRightCardBlog.date}</p>
                  <p id="right-card-excerpt" class="text-gray-700 dark:text-gray-300 leading-relaxed text-lg">{initialRightCardBlog.excerpt}</p>
                  
                  {/* ✅ Wrapped span in a div with text-right */}
                  <div class="text-right mt-6">
                    <span id="right-card-read-more" class={`font-jetbrains-mono ${colorConfig[initialColor].text} inline-block text-lg`}>
                      read_more &rarr;
                    </span>
                  </div>
                </div>
              </a>
            </div>
          )
        }
      </div>
    </div>

    {/* "View More" link moved outside the grid for true centering */}
    <div class="text-center mt-12">
      <a 
        href="/blogsd" 
        class="font-jetbrains-mono text-lg text-gray-500 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-500 transition-colors duration-300"
      >
        view_more_blogs &rarr;
      </a>
    </div>
    
  </div>
</section>

<script define:vars={{ colorConfig }}>
  document.addEventListener('DOMContentLoaded', () => {
    const leftCardsContainer = document.getElementById('left-cards-container');
    const rightCard = document.getElementById('right-card');

    if (!leftCardsContainer || !rightCard) return;

    const rightCardLink = document.getElementById('right-card-link');
    const rightCardTitle = document.getElementById('right-card-title');
    const rightCardMeta = document.getElementById('right-card-meta');
    const rightCardExcerpt = document.getElementById('right-card-excerpt');
    const rightCardReadMore = document.getElementById('right-card-read-more');
    const imageEls = rightCard.querySelectorAll('.image-container img');

    // Use event delegation for hover effect
    leftCardsContainer.addEventListener('mouseenter', (event) => {
      const card = event.target.closest('.blog-card-left');
      if (!card) return;

      const { title, author, date, excerpt, link, color, img } = card.dataset;
      const theme = colorConfig[color];
      if (!theme) return;

      rightCardTitle.textContent = title;
      rightCardMeta.textContent = `// by ${author} • ${date}`;
      rightCardExcerpt.textContent = excerpt; 

      if (rightCardLink) rightCardLink.href = link;
      
      rightCard.className = rightCard.className.replace(/border-t-(blue|green|red|amber)-500/, theme.border);
      rightCardReadMore.className = rightCardReadMore.className.replace(/text-(blue|green|red|amber)-600/, theme.text);

      // Fade image swap
      imageEls.forEach(imgEl => {
        if (imgEl.getAttribute("src") === img) {
          imgEl.classList.add("active");
        } else {
          imgEl.classList.remove("active");
        }
      });
    }, true); 
  });
</script>