---
import GDG_LOGO from "../assets/GDG_LOGO.png";
import "../styles/Header.css";
---

<header class="fixed top-4 left-1/2 -translate-x-1/2 z-50 w-[95%] md:w-[80%] rounded-xl
               backdrop-blur-sm bg-white/10 dark:bg-black/10 border border-black/10 dark:border-white/20 font-['Roboto']">

  <div class="flex items-center justify-between px-6 py-3">
    <!-- Logo -->
    <a href="/" class="flex items-center space-x-2">
      <img src={GDG_LOGO.src} alt="GDG Logo" class="h-8 w-13" />
      <span class="text-lg font-extrabold text-black dark:text-white tracking-wide">GDG</span>
    </a>

    <!-- Desktop Nav -->
    <nav class="hidden md:flex items-center space-x-6 font-bold uppercase text-sm tracking-wider text-black dark:text-white">
      <a href="/About" class="corner-link">About</a>
      <a href="/blogs" class="corner-link">Blogs</a>
      <a href="/team" class="corner-link">Team</a>
      <a href="/events" class="corner-link">Events</a>
      <a href="/projects" class="corner-link">Projects</a>
    </nav>

    <!-- Desktop Theme Toggle -->
    <div class="hidden md:flex">
      <button id="theme-toggle" class="corner-btn">🌙 Dark</button>
    </div>

    <!-- Mobile Hamburger -->
    <button id="menu-btn" class="md:hidden text-black dark:text-white focus:outline-none">
      <svg id="hamburger" class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
      </svg>
      <svg id="close" class="hidden w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
      </svg>
    </button>
  </div>
</header>

<!-- Mobile Menu (Glass + Slide Down) -->
<nav
  id="mobile-menu"
  class="fixed md:hidden top-[calc(4rem+1rem)] left-1/2 -translate-x-1/2 w-[95%] max-w-none flex-col rounded-xl
         bg-white/10 dark:bg-black/10 dark:text-white font-bold backdrop-blur-sm shadow-2xl border border-black/10 dark:border-white/20
         p-6 space-y-6 transform -translate-y-4 opacity-0 pointer-events-none transition-all duration-300 ease-out z-50"
>
  <a href="/about" class="corner-link w-full text-center text-black dark:text-white">About</a>
  <a href="/blogs" class="corner-link w-full text-center text-black dark:text-white">Blogs</a>
  <a href="/team" class="corner-link w-full text-center text-black dark:text-white">Team</a>
  <a href="/events" class="corner-link w-full text-center text-black dark:text-white">Events</a>
  <a href="/projects" class="corner-link w-full text-center text-black dark:text-white">Projects</a>
  <button id="theme-toggle-mobile" class="corner-btn w-full text-black dark:text-white">🌙</button>
</nav>

<style>
  /* Corner hover links */
  .corner-link {
    position: relative;
    padding: 0.25rem 0.5rem;
    color: inherit;
    display: inline-block;
  }
  .corner-link::before,
  .corner-link::after {
    content: "";
    position: absolute;
    width: 6px;
    height: 6px;
    border: 2px solid currentColor;
    opacity: 0;
    transition: all 0.4s ease;
  }
  .corner-link::before { top: 0; left: 0; border-right: 0; border-bottom: 0; }
  .corner-link::after { bottom: 0; right: 0; border-left: 0; border-top: 0; }
  .corner-link:hover::before,
  .corner-link:hover::after { opacity: 1; }

  /* Button with corner borders */
  .corner-btn {
    position: relative;
    padding: 0.5rem 1rem;
    background: transparent;
    color: inherit;
    font-weight: 700;
    border: none;
    cursor: pointer;
    transition: color 0.3s ease;
  }
  .corner-btn::before,
  .corner-btn::after {
    content: "";
    position: absolute;
    width: 8px;
    height: 8px;
    border: 2px solid currentColor;
    opacity: 0;
    transition: opacity 0.4s ease;
  }
  .corner-btn::before { top: -2px; left: -2px; border-right: 0; border-bottom: 0; }
  .corner-btn::after { bottom: -2px; right: -2px; border-left: 0; border-top: 0; }
  .corner-btn:hover::before,
  .corner-btn:hover::after { opacity: 1; }
</style>

<script is:inline>
document.addEventListener("DOMContentLoaded", () => {
  const btn = document.getElementById("menu-btn");
  const mobileMenu = document.getElementById("mobile-menu");
  const hamburger = document.getElementById("hamburger");
  const close = document.getElementById("close");

  btn.addEventListener("click", () => {
    const isOpen = mobileMenu.classList.contains("opacity-100");
    if (isOpen) {
      mobileMenu.classList.remove("opacity-100", "translate-y-0", "pointer-events-auto");
      mobileMenu.classList.add("opacity-0", "-translate-y-4", "pointer-events-none");
    } else {
      mobileMenu.classList.add("opacity-100", "translate-y-0", "pointer-events-auto");
      mobileMenu.classList.remove("opacity-0", "-translate-y-4", "pointer-events-none");
    }
    hamburger.classList.toggle("hidden");
    close.classList.toggle("hidden");
  });

  // Theme toggle
  const html = document.documentElement;
  const desktopToggle = document.getElementById("theme-toggle");
  const mobileToggle = document.getElementById("theme-toggle-mobile");

  const setMode = (dark) => {
    if (dark) {
      html.classList.add("dark");
      desktopToggle.textContent = "☀️";
      if (mobileToggle) mobileToggle.textContent = "☀️";
    } else {
      html.classList.remove("dark");
      desktopToggle.textContent = "🌙";
      if (mobileToggle) mobileToggle.textContent = "🌙";
    }
  };

  const savedTheme = localStorage.getItem("theme");
  if (savedTheme === "dark") setMode(true);
  else setMode(false);

  [desktopToggle, mobileToggle].forEach((toggle) => {
    if (toggle) toggle.addEventListener("click", () => {
      const isDark = html.classList.contains("dark");
      setMode(!isDark);
      localStorage.setItem("theme", !isDark ? "dark" : "light");
    });
  });
});
</script>
